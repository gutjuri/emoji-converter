# -*- coding: utf-8 -*-

require 'optparse'

def convert dict, str
	ret = ''
	str.split('').each { |c| if dict.has_key?(c.downcase) then ret += dict[c.downcase] else ret += c end}
	ret
end

dict = { 	'a' => 'üÖ∞',
          'b' => 'üÖ±',
          'c' => '¬©',
          'd' => '‚ñ∑',
          'e' => '‚Ñá',
          'f' => 'üéè',
          'g' => '·∏°',
          'h' => '‚ôì',
          'i' => '‚Ñπ',
          'j' => '‚Ñë',
          'k' => '·∂Ñ',
          'l' => 'üë¢',
          'm' => '‚ìÇ',
          'n' => '‚ôë',
          'o' => 'üÖæ',
          'p' => 'üÖø',
          'q' => '‚Ñö',
          'r' => '¬Æ',
          's' => 'üí≤',
          't' => '‚ôà',
          'u' => '‚Ñß',
          'v' => '‚ãÅ',
          'w' => '‚©ñ',
          'x' => '‚ùå',
          'y' => '‚ÑΩ',
          'z' => 'üí§',
          '0' => '0‚É£',
          '1' => '1‚É£',
          '2' => '2‚É£',
          '3' => '3‚É£',
          '4' => '4‚É£',
          '5' => '5‚É£',
          '6' => '6‚É£',
          '7' => '7‚É£',
          '8' => '8‚É£',
          '9' => '9‚É£',
          '!' => '‚ùó',
          '?' => '‚ùì'}

options = {}
OptionParser.new do |opt|
	opt.on('-f FROM_FILE', '--from FROM_FILE') { |o| options[:from_file] = o}
	opt.on('-t TO_FILE', '--to TO_FILE') { |o| options[:to_file] = o }
end.parse!

in_stream = options[:from_file] ? File.open(options[:from_file], 'r') : $stdin
out_stream = options[:to_file] ? File.open(options[:to_file], 'w') : $stdout

in_stream.each do |line|
  out_stream.puts(convert dict, line)
end

in_stream.close
out_stream.close
